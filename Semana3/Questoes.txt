Claro! A Semana 3 envolve **Estruturas de Dados** em Python, como **listas**, **tuplas**, **dicionários** e **conjuntos (sets)**. Esses exercícios vão te ajudar a praticar a manipulação dessas estruturas de dados.

### Semana 3: Estruturas de Dados

#### 1. Listas

1. **Exercício 1:** Crie uma lista de 5 números inteiros fornecidos pelo usuário. Exiba:
   - O maior número da lista.
   - O menor número da lista.
   - A soma de todos os números.
   - A média dos números.

   lista_inteiros = []
for n in range(5):
    numero = int(input(f"Digite um numero {n} inteiro: "))
    lista_inteiros.append(numero)

# Maior numero da lista
print(f'Maior: {max(lista_inteiros)}')

# Menor numero da lista
print(f'Menor: {min(lista_inteiros)}')

# Soma da lista
print(f'Soma: {sum(lista_inteiros)}')

# Media dos numeros.
print(f'Media: {sum(lista_inteiros)/len(lista_inteiros)}')


2. **Exercício 2:** Dada a lista `frutas = ['maçã', 'banana', 'uva', 'abacaxi', 'laranja']`, faça o seguinte:
   - Adicione a fruta 'manga' ao final da lista.
   - Insira a fruta 'kiwi' na posição 2.
   - Remova a fruta 'banana' da lista.
   - Ordene a lista em ordem alfabética.
   
frutas = ['maçã', 'banana', 'uva', 'abacaxi', 'laranja']

# - Adicione a fruta 'manga' ao final da lista.
frutas.append('manga')
print(frutas)
# - Insira a fruta 'kiwi' na posição 2.
frutas.insert(1, 'kiwi')
print(frutas)
# - Remova a fruta 'banana' da lista.
frutas.remove('banana')
print(frutas)
# - Ordene a lista em ordem alfabética.
frutas.sort()
print(frutas)


3. **Exercício 3:** Crie uma lista com 10 números inteiros e, em seguida:
   - Remova todos os números pares da lista.
   - Exiba a lista resultante.

   inteiros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
impares = []

for n in inteiros:

    if n % 2 == 0:
        continue

    impares.append(n)

print(impares)

#### 2. Tuplas

4. **Exercício 4:** Crie uma tupla com os valores de 1 a 5. Depois, faça o seguinte:
   - Exiba o primeiro e o último valor da tupla.
   - Converta a tupla para uma lista e adicione o número 6.
   - Converta a lista de volta para tupla.

   inteiros = (1, 2, 3, 4, 5)
# - Exiba o primeiro e o último valor da tupla.
print(f'Primeiro valor: {inteiros[0]} - Ultimo Valor: {inteiros[4]}')
# - Converta a tupla para uma lista e adicione o número 6.
lista = list(inteiros)
lista.append(6)
# - Converta a lista de volta para tupla.
inteiros = tuple(lista)

print(inteiros, type(inteiros))


5. **Exercício 5:** Crie uma tupla com 5 nomes de pessoas. Em seguida:
   - Exiba a tupla ordenada em ordem alfabética.
   - Verifique se um determinado nome (fornecido pelo usuário) está presente na tupla.

nomes = ("Gabriel", "Gemildo", "Paulete", "Filipe", "Luis",)

#   - Exiba a tupla ordenada em ordem alfabética.
print(tuple(sorted(nomes)))

nome = input("Consultar pessoa, na tupla: ")

if nome in nomes:
    print(f"A pessoa está na tupla: {nome}")

else:
    print(f"A pessoa não está na tupla: {nome}")



#### 3. Dicionários

6. **Exercício 6:** Crie um dicionário que armazene as informações de 3 produtos, onde a chave é o nome do produto e o valor é o preço. Em seguida:
   - Exiba o nome e o preço de todos os produtos.
   - Permita que o usuário altere o preço de um dos produtos.
   - Exiba o dicionário atualizado.
produtos = {"Coca": 8.30, "Feijão": 6.50, "Mandioca": 8.6}


#   - Exiba o nome e o preço de todos os produtos.
for n in produtos:
    print(f'Item: {n} - R${produtos[n]} ')

#   - Permita que o usuário altere o preço de um dos produtos.
x = input("Digite o item do que deseja alterar o preço: ")

if x in produtos:
    print(f'Item: {x} - R${produtos[x]}')

    novo_valor = float(input("Digite um novo valor: "))
    produtos[x] = novo_valor

#   - Exiba o dicionário atualizado.

for n in produtos:
    print(f'Item: {n} - R${produtos[n]} ')

7. **Exercício 7:** Dado o dicionário `aluno = {'nome': 'João', 'idade': 20, 'nota': 8.5}`, faça o seguinte:
   - Adicione uma nova chave chamada `curso` com o valor `'Engenharia'`.
   - Atualize a idade do aluno para 21 anos.
   - Remova a chave `nota` do dicionário.
   - Exiba o dicionário final.

   aluno = {'nome': 'João', 'idade': 20, 'nota': 8.5}

# - Adicione uma nova chave chamada `curso` com o valor `'Engenharia'`.
aluno.update({"curso": 'Engenharia'})

# - Atualize a idade do aluno para 21 anos.
aluno.update({"idade": 21})
# - Remova a chave `nota` do dicionário.
aluno.pop('nota')

# - Exiba o dicionário final.
print(aluno)


8. **Exercício 8:** Crie um dicionário com os nomes e idades de 5 pessoas. Em seguida:
   - Permita que o usuário adicione mais uma pessoa ao dicionário.
   - Exiba todos os nomes e idades em ordem de inserção.
   - Exiba os nomes das pessoas que têm mais de 30 anos.
"""
pessoas = {
    "Gabriel": 29,
    "Ariane": 34,
    "Lorena": 5,
    "Angela": 55,
    "Aparecida": 69,
}
# - Permita que o usuário adicione mais uma pessoa ao dicionário.

nome = input("Digite o nome: ")
idade = int(input("Digite uma nova idade: "))

pessoas.update({nome: idade})

# - Exiba todos os nomes e idades em ordem de inserção.
for pessoa in pessoas:
    print(f'{pessoa}: {pessoas[pessoa]}')

print("=================")

for pessoa in pessoas:
    if pessoas[pessoa] >= 30:
        print(f'{pessoa}: {pessoas[pessoa]}')


#### 4. Conjuntos (Sets)

9. **Exercício 9:** Crie dois conjuntos de números inteiros. O primeiro conjunto deve conter os números pares de 1 a 10, e o segundo deve conter os números ímpares de 1 a 10.
Em seguida:
   - Exiba a união dos dois conjuntos.
   - Exiba a interseção dos dois conjuntos (deve ser vazia).
   - Exiba a diferença entre o conjunto de números pares e o de ímpares.

   a = set()
b = set()

for n in range(1,11):
    if n % 2 == 0:
       a.add(n)

    if n == 1:
      b.add(n)
   
    if n % 3 == 0:
       if n % 2 == 0:
         continue
       
       else:
          b.add(n)

print(a, b)
print(f'Interseção A e B: {a.intersection(b)}')
print(f'Diferença entre A e B: {a - b} e {b-a}')

10. **Exercício 10:** Crie um conjunto com os nomes de 5 frutas. Em seguida:
   - Verifique se a fruta 'maçã' está presente no conjunto.
   - Adicione a fruta 'melancia' ao conjunto.
   - Remova a fruta 'uva' do conjunto (se existir).
   - Exiba o conjunto resultante.


frutas = ['maçã', 'banana', 'uva', 'abacaxi', 'laranja']

if 'maçã' in frutas:
    print("A Fruta Maçã existe no grupo")

frutas.append('Melancia')

frutas.remove('uva')

print(frutas)

---

### Desafio

**Desafio:** Crie um programa que simule uma agenda de contatos. Use um **dicionário**, onde as chaves são os nomes dos contatos e os valores são os números de telefone. 
O programa deve permitir ao usuário:
- Adicionar novos contatos.
- Exibir todos os contatos.
- Buscar o telefone de um contato específico.
- Alterar o telefone de um contato existente.
- Remover um contato da agenda.

---

Esses exercícios cobrem os principais conceitos da Semana 3 (listas, tuplas, dicionários e conjuntos). Resolva-os no seu ritmo e, se tiver dúvidas ou precisar de ajuda, estou aqui para auxiliar!