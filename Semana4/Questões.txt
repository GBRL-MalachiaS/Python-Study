### Semana 4: Manipulação de Strings e Arquivos

#### Manipulação de Strings

1. **Exercício 1:** Crie um programa que receba uma string do usuário e:
   - Exiba a quantidade de caracteres da string.
   - Exiba a string toda em maiúsculas.
   - Exiba a string toda em minúsculas.
   - Exiba a string com a primeira letra de cada palavra em maiúsculo.

texto = input("Digite um texto: ")

# - Exiba a quantidade de caracteres da string.
print(f"Quantidade de caracteres: {len(texto)}")
# - Exiba a string toda em maiúsculas.
print(f"Texto em maiusculo: {texto.upper()}")
# - Exiba a string toda em minúsculas.
print(f'Texto em minuscula: {texto.lower()}')
# - Exiba a string com a primeira letra de cada palavra em maiúsculo.
print(f'texto com as uniciais maiscula: {texto.title()}')


2. **Exercício 2:** Escreva um programa que verifique se uma string inserida pelo usuário é um palíndromo (uma palavra que é lida da mesma forma de trás para frente).
   - Exemplo de palíndromo: "arara", "radar", "reviver".

texto = input("Digite um possivel palintromo: ")
texto_limpo = texto.replace(" ", "").lower()

if texto_limpo == texto_limpo[::-1]:
    print(f"A palavra {texto} é um palindromo")
else:
    print(f'A palavra {texto}, não é um palindromo')


3. **Exercício 3:** Crie um programa que leia uma frase do usuário e:
   - Conte quantas vogais (a, e, i, o, u) há na frase.
   - Substitua todas as ocorrências da letra "a" por "@".

texto = input("Digite um texto: ").lower()
vogais = ["a", "e", "i", "o", "u"]
qtd_vogais = 0
texto_limpo = texto.replace(" ", "")

for n in texto_limpo:
    for i in vogais:
        if n == i:
            qtd_vogais += 1
novo_texto = texto_limpo.replace("a", "@")

print(f'Quantidade de vogais: {qtd_vogais}')
print(novo_texto)


4. **Exercício 4:** Escreva um programa que receba o nome completo do usuário e retorne:
   - O nome com todas as letras maiúsculas.
   - O nome com todas as letras minúsculas.
   - A quantidade de letras do nome (sem contar os espaços).
   - O primeiro nome e a quantidade de letras que ele possui.

nome = input("Digite seu nome completo: ")

# - O nome com todas as letras maiúsculas.
print(f"Nome Maiúscula: {nome.upper()}")

# - O nome com todas as letras minúsculas.
print(f"Nome Minuscula: {nome.lower()}")

# - A quantidade de letras do nome (sem contar os espaços).
print(f"Quantidade de Letras: {len(nome.replace(" ", ""))}")

# - O primeiro nome e a quantidade de letras que ele possui.
nome = nome.split()
print(f'Primero nome: {nome[0]} - Quantidade de Letras: {len(nome[0])}')


5. **Exercício 5:** Dada a frase `"Python é uma linguagem de programação divertida"`, faça o seguinte:
   - Substitua a palavra "divertida" por "incrível".
   - Encontre o índice da palavra "linguagem" na frase.
   - Divida a frase em uma lista de palavras.


frase = "Python é uma linguagem de programação divertida"
# - Substitua a palavra "divertida" por "incrível".

print(frase.replace("divertida", "incrivel"))

# - Encontre o índice da palavra "linguagem" na frase.
print(frase.find("linguagem"))

# - Divida a frase em uma lista de palavras.
print(frase.split())
   

#### Manipulação de Arquivos

6. **Exercício 6:** Crie um arquivo chamado `nomes.txt` e escreva nele o nome de 5 pessoas, uma em cada linha. Em seguida:
   - Leia o arquivo e exiba o conteúdo na tela.
   - Adicione mais 2 nomes ao arquivo e exiba o conteúdo atualizado.

with open("nome.txt", "r") as file:
    print(file.read())

# - Adicione mais 2 nomes ao arquivo e exiba o conteúdo atualizado.
with open("nome.txt", "a") as file:
    file.seek(0, 2)
    if file.tell() > 0:
        file.write("Juninhos\n")
        file.write("Jorginho\n")

with open("nome.txt", "r") as file:
    print(file.read())


7. **Exercício 7:** Escreva um programa que leia um arquivo texto contendo números inteiros (um por linha), calcule a soma desses números e exiba o resultado.
   - **Dica:** Primeiro, crie o arquivo `numeros.txt` com alguns números inteiros.

   with open("inteiros.txt", "r") as inteiros:
    numeros = inteiros.readlines()
    soma = 0
    for n in numeros:
        soma += int(n)
    print(f"Soma dos numeros da lista: {soma}")

8. **Exercício 8:** Crie um programa que leia um arquivo texto (`texto.txt`) e exiba:
   - O número total de linhas no arquivo.
   - O número total de palavras no arquivo.
   - O número total de caracteres no arquivo.

with open("texto.txt", "r", encoding="utf-8") as texto:
    conteudo = texto.read()  # Ler todo o conteúdo do arquivo

    # Contagem de linhas
    linhas = conteudo.splitlines()  # Divide o texto nas linhas
    print(f'Quantidade de Linhas: {len(linhas)}')

    # Contagem de palavras
    lista_palavras = conteudo.split()  # Divide o texto em palavras
    print(f"Quantidades de Palavras: {len(lista_palavras)}")

    # Contagem de caracteres (incluindo espaços e pontuações)
    # Conta todos os caracteres, incluindo espaços
    qtd_caracteres = len(conteudo)
    print(f"Quantidade de caracteres: {qtd_caracteres}")


9. **Exercício 9:** Faça um programa que leia um arquivo texto e substitua todas as ocorrências de uma palavra específica por outra, salvando o resultado em um novo arquivo.
   - **Dica:** Crie o arquivo `texto_original.txt` com algum conteúdo de exemplo e faça as substituições.

   with open('texto_original.txt', "r") as texto:
    conteudo = texto.read().lower()
    palavras_trocadas = conteudo.replace("a", "@@@")

    with open("novo_texto.txt", 'w') as texto_novo:
        texto_novo.write(palavras_trocadas)


10. **Exercício 10:** Crie um programa que abra um arquivo de texto e remova todas as linhas vazias do arquivo. Salve o resultado em outro arquivo.

with open("texto_original.txt", "r", encoding="UTF-8") as texto:
    linhas = texto.readlines()
    with open("texto_novo.txt", "w", encoding="UTF-8") as novo_texto:
        for n in linhas:
            if n == "\n":
                continue
            novo_texto.write(n)

"""

### Desafio

**Desafio:** Crie um programa que funcione como um simples editor de texto. O programa deve permitir ao usuário:
- Abrir um arquivo existente.
- Adicionar mais conteúdo ao arquivo.
- Exibir o conteúdo atualizado do arquivo.
- Fechar o programa.

---

Esses exercícios cobrem os conceitos fundamentais de **manipulação de strings** e **manipulação de arquivos** em Python. Resolva-os no seu ritmo e, quando estiver pronto, podemos revisar juntos! Se precisar de ajuda ou esclarecimentos, estou à disposição.