Claro! A Semana 2 envolve estruturas de controle e funções em Python, como condicionais (`if`, `elif`, `else`), laços de repetição (`for`, `while`), e funções (definição, parâmetros e retorno). Abaixo, preparei uma série de exercícios práticos para você.

### Exercícios Semana 2: Estruturas de Controle e Funções

#### 1. Estruturas Condicionais

1. **Exercício 1:** Escreva um programa que pergunte ao usuário um número inteiro e exiba uma mensagem indicando se o número é positivo, negativo ou zero.
numero = int(input('Digite um numero: '))

if numero > 0:
    print('Numero é positivo')
elif numero < 0:
    print("Numero é negativo")
else:
    print('Numero igual a zero')


2. **Exercício 2:** Crie um programa que pergunte ao usuário três números e determine qual deles é o maior.
lista_numeros = []
maior = 0
for numero in range(3):
    numero = int(input("Digite um numero: "))
    lista_numeros.append(numero)

for x in lista_numeros:

    if maior < x:
        maior = x

print(maior)


3. **Exercício 3:** Escreva um programa que leia a idade do usuário e exiba uma mensagem dizendo se ele é menor de idade (menos de 18 anos), adulto (entre 18 e 64 anos), ou idoso (65 anos ou mais).
idade = int(input("Digite sua idade: "))

if idade >= 18 and idade <= 64:
    print("Adulto")
elif idade > 65:
    print("Idoso")
else:
    print("Menor de idade")


4. **Exercício 4:** Escreva um programa que peça ao usuário uma nota (entre 0 e 10) e exiba se ele foi aprovado ou reprovado, considerando que a média de aprovação é 7.0. Caso a nota seja inválida (não esteja entre 0 e 10), exiba uma mensagem de erro.
nota = int(input("Digite uma nota: "))

if nota >= 7 and nota <= 10:
    print("Aprovado")
elif nota >= 0 and nota <= 6:
    print("Reprovado")
else:
    print("Nota invalida")


#### 2. Laços de Repetição

5. **Exercício 5:** Escreva um programa que exiba todos os números pares de 1 a 50.

for x in range(0, 51, 2):
    print(x)

for n in range(51):
    if n % 2 == 0:
        print(n)


6. **Exercício 6:** Crie um programa que peça ao usuário um número inteiro positivo e calcule a soma de todos os números inteiros de 1 até o número informado.

# Com While
numero = int(input("Digite um numero inteiro: "))
contador = 0
soma = 0

while numero > contador:
    contador += 1
    soma += contador

print(soma)

# Com for
soma = 0
for n in range(numero+1):
    soma += n

print(soma)


7. **Exercício 7:** Escreva um programa que leia um número inteiro e exiba a tabuada de multiplicação desse número de 1 a 10.
tabuada = int(input("Digite o numero da tabuada que deseja saber: "))

# com for


for n in range(11):
    print(f'{tabuada} x {n} = {tabuada*n}')

# com while

print('')

contador = 0
while 11 > contador:
    print(f'{tabuada} x {contador} = {tabuada*contador}')
    contador += 1


8. **Exercício 8:** Crie um programa que peça ao usuário para digitar uma senha e permita que ele tenha até 3 tentativas para acertar a senha correta. Se ele errar nas 3 tentativas, exiba uma mensagem de acesso bloqueado.

senha = "banana123"

for x in range(3, 0, -1):

    opcao_senha = input("Digite sua senha:")
    if opcao_senha == senha:
        print("Senha está certa!")
        break
    else:
        print(f"Você possui {x} tentativas")


#### 3. Funções

9. **Exercício 9:** Escreva uma função chamada `eh_par(numero)` que receba um número inteiro como argumento e retorne `True` se o número for par ou `False` se for ímpar.

def eh_par(numero):
    if numero % 2 == 0:
        return True
    else:
        return False


numero = 1

print(eh_par(numero))


10. **Exercício 10:** Crie uma função chamada `calcula_fatorial(numero)` que receba um número inteiro positivo e retorne o fatorial desse número.

def calcula_fatorial(numero):
    contador = 1
    fatorial = 1
    while numero >= contador:
        fatorial *= contador
        contador += 1

    return f'Fatorial de {numero}! = {fatorial}'


print(calcula_fatorial(numero=4))


11. **Exercício 11:** Crie uma função chamada `calcula_media(notas)` que receba uma lista de notas (números) e retorne a média delas.

def calcula_media(notas):
    qtd_notas = len(notas)
    soma_notas = sum(notas)
    media = soma_notas / qtd_notas
    return f'A média do aluno é: {media}'


provas = int(input("Digite quantas provas o aluno tem: "))
notas_aluno = []
for i in range(provas):
    x = float(input(f"Digite a nota[{i}]: "))
    notas_aluno.append(x)

print(calcula_media(notas_aluno))


12. **Exercício 12:** Escreva uma função chamada `eh_primo(numero)` que receba um número inteiro e retorne `True` se ele for um número primo, ou `False` caso contrário. Em seguida, crie um programa que peça ao usuário um número e informe se ele é primo ou não, utilizando a função.


import math


def eh_primo(numero):
   
    if numero <= 1:
        return False

    
    for i in range(2, int(math.sqrt(numero)) + 1):
        if numero % i == 0:
            return False
    return True



numero = 29  
if eh_primo(numero):
    print(f"{numero} é primo.")
else:
    print(f"{numero} não é primo.")


---

### Desafio

13. **Desafio:** Escreva um programa que simule uma calculadora simples. O programa deve oferecer ao usuário um menu com as opções de soma, subtração, multiplicação, divisão e sair. Após o usuário escolher a operação, ele deve digitar dois números, e o programa deve calcular e exibir o resultado. O programa deve permitir que o usuário faça quantos cálculos quiser até escolher a opção de sair.
"""
 **Desafio:** Escreva um programa que simule uma calculadora simples. O programa deve oferecer ao usuário um menu com as opções de soma, subtração, multiplicação, divisão e sair.
 Após o usuário escolher a operação, ele deve digitar dois números, e o programa deve calcular e exibir o resultado. O programa deve permitir que o usuário faça quantos cálculos quiser até escolher a opção de sair.
"""


def soma(x, y):
    return x + y


def subtracao(x, y):
    return x - y


def multiplicacao(x, y):
    return x * y


def divisao(x, y):
    return x / y


while True:

    operacao = input("Digite a operação [+], [-], [*] e [/]: ")
    operacoes = ["+", "-", "*", "/"]

    if operacao not in operacoes:
        print("Valor digitado é invalido, programa finalizado.")
        break

    numero1 = float(input("Valor 1: "))
    numero2 = float(input('Valor 2: '))

    if operacao == '+':
        print(f'{numero1} + {numero2} = {soma(numero1, numero2)}')
    elif operacao == '-':
        print(f'{numero1} + {numero2} = {subtracao(numero1, numero2)}')
    elif operacao == '*':
        print(f'{numero1} + {numero2} = {multiplicacao(numero1, numero2)}')
    elif operacao == '/':
        print(f'{numero1} + {numero2} = {divisao(numero1, numero2)}')

    opcao = input("Deseja fazer outra operação: [S] ou [N]: ").upper()

    if opcao == 'S':
        continue
    elif opcao == 'N':
        break
    else:
        print('Opcao Invalida, programa reiniciado')

---

Esses exercícios cobrem os conceitos fundamentais de estruturas condicionais, laços de repetição e funções. Eles ajudarão a consolidar o aprendizado da Semana 2. Resolva o máximo que conseguir e, se precisar de ajuda ou correções, estarei aqui para auxiliar!